# import random 
# from hangman_art import logo, stages
# from hangman_words import word_list


# chosen_word = random.choice(word_list)
# word_length = len(chosen_word)

# end_of_game = False
# lives = 6
# print(logo)


# print(f'Pssst, the solution is {chosen_word}')

# display = []
# for _ in range(word_length):
#   display += "_"

# while not end_of_game:
#   guess = input("Guess a letter: ").lower()
#   if guess in display:
#      print(f"You choose {guess} this one previously")

#   for position in range(word_length) :
#     letter = chosen_word[position]

#     if letter == guess:
#         display[position] = letter

#   if guess not in chosen_word:
#       print(f" your guess {guess} is not in in this word again, You lose your life.")
       
#       lives -= 1
#       if lives == 0 :
#          end_of_game = True
#          print("You lose.")

  

#   print(f"{' '.join(display)}")

#   if "_" not in display:
#      end_of_game = True
#      print("You Win.")

#   print(stages[lives]) 
# ...............................................
# solution 2 

import random 
from hangman_art import logo, stages
from hangman_words import word_list

chosen_word = random.choice(word_list)
word_length = len(chosen_word)

end_of_game = False
lives = 6
print(logo)

print(f'Pssst, the solution is {chosen_word}')

display = []
for _ in range(word_length):
  display += "_"

guessed_letters = []  # List to keep track of guessed letters
incorrect_guesses = {}  # Dictionary to keep track of incorrect guesses for each letter

while not end_of_game:
  guess = input("Guess a letter: ").lower()

  if guess in guessed_letters:
    print(f"You have already guessed '{guess}'. Please try again.")
    continue

  guessed_letters.append(guess)  # Add guessed letter to the list

  if guess not in chosen_word:
    if guess in incorrect_guesses and incorrect_guesses[guess] == 1:
      incorrect_guesses[guess] += 1
      print(f"You have already guessed '{guess}' incorrectly once. Your lives will not be reduced this time.")
    else:
      incorrect_guesses[guess] = 1
      print(f"Your guess '{guess}' is not in the word. You lose a life.")
      lives -= 1
      if lives == 0:
        end_of_game = True
        print("You lose.")
  else:
    for position in range(word_length):
      letter = chosen_word[position]
      if letter == guess:
        display[position] = letter

  print(f"{' '.join(display)}")

  if "_" not in display:
    end_of_game = True
    print("You Win.")

  print(stages[lives])
